---
layout:   post
title:    Those Crazy Designing Developers
category: Code
---

p. There is a great thought provoking post over at the "Nerdary":http://thenerdary.net/ about the topic of developers and design. The post is a bit of a spin on the ol’ designers knowing code topic. If this were another boring post about designers and code, I would have passed it over, but the spin gathered my attention. Jenn Lukas has done a good job of putting it into context. It's definitely worth a read. Here's my two cents.

p. The path I took to web development involved an enlightenment of sorts. While I enjoyed designing and developing, I was clearly better at development. I understand programming logic, database structures, and performance more than I understand color theory. That is not saying that I don’t understand color theory, it’s saying that the programming concepts come more natural to me than the aesthetic theories. In the words of my favorite chef, Gordon Ramsay; “Employ somebody to do it for you. Play on your strengths, and improve your weaknesses.” That is the route I took. I play to my strengths while improving my weaknesses. I work hard at being the best developer that I possibly can while continually educating myself about design.

h2(default). Talking Design

p. I’m not that bad. I am talking about design now. While in college for web design/development, I made a goal. My goal was to be the best developer there, while staying competent in design. I knew I would never be the best developer, but having something to measure yourself by is a great motivator. If the developer sitting next to me is killing me with his JavaScript skills; I want to know how. What does he know that I don’t? How can I be better? Answering these questions always make me better. It is worth mentioning that I never viewed these as competitions, but more as learning from each other. I have never looked down at someone that had less knowledge than me, and I would not refuse to teach anyone anything that I know. That is probably why I teach now.

p. So, the question is “Do developers need to know how to design?”. Yep, they do. Only if they want to be the best. If you are a developer and are content to make ugly software while relying on others to always make it look good, I wish you luck. Although, keep in mind that you will be left behind. You cannot develop an incredible user experience without aesthetics. It plays a huge role, and as a developer, you have to at least know what is good design. Hint. It is not all black with white text.

p. Design is as much about solving problems as programming is. In fact, every great designer I know might argue that design is problem solving. When a good designer is creating a web page, he is selecting shapes, color, spacing, and type with purpose. Hint. It’s not because they are pretty. It’s because that selection solves a problem.

h2(default). Designers code. Developers should design.

p. Learn design, appreciate it, be a student, but be smart; when you need something incredible, get yourself an incredible designer.

p. A closing note, developers are only hired when a designer can’t make it happen with WordPress, jQuery, or another framework. Developers should act the same way regarding design. Don’t hire a designer if you can make a CSS framework work for you.